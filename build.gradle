plugins {
    id 'net.neoforged.moddev' version '1.0.20'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://maven.lukebemish.dev/releases'
    }
}

dependencies {
    jarJar(implementation "dev.lukebemish:codecextras:${codecextras_version}")
    jarJar(implementation "blue.endless:jankson:${jankson_version}")
    additionalRuntimeClasspath("blue.endless:jankson:${jankson_version}")
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

neoForge {
    version = project.neo_version

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }

    runs {
        configureEach {
            systemProperty 'forge.logging.console.level', 'debug'
        }
        client {
            client()
        }
        server {
            server()
        }
    }
}

tasks.named('processResources', ProcessResources) {
    var replaceProperties = [
            mc_version       : mc_version,
            mc_version_range : mc_version_range,
            neo_version      : neo_version,
            neo_version_range: neo_version_range,
            loader_version   : loader_version,
            mod_id           : mod_id,
            mod_version      : mod_version,
            mod_name         : mod_name,
            mod_authors      : mod_authors,
            mod_credits      : mod_credits,
            mod_logo         : mod_logo,
            mod_description  : mod_description,
            mod_license      : mod_license,
    ]
    inputs.properties replaceProperties
    filesMatching('META-INF/neoforge.mods.toml') {
        expand replaceProperties
    }
}

jar {
    archiveBaseName = mod_id
    archiveVersion = "${mc_version}-${mod_version}"
}
